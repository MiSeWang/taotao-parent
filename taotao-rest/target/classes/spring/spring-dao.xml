<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	<!-- 扫描配置文件db.properties -->
	<context:property-placeholder location="classpath:*.properties" />

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 配置sqlSession -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<!-- 注意：这里可以采取将xml配置文件方知道web项目中，然后开启下面语句即可
		<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml"></property>
		-->
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mrlv.taotao.mapper"></property>
	</bean>

	<!-- 使用客户端单机版 -->
	<bean class="com.mrlv.taotao.rest.dao.impl.JedisClientSingle" />

	<!-- jeedis客户端单机版 -->
	<bean id="redisClient" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="host" value="127.0.0.1"></constructor-arg>
		<constructor-arg name="port" value="6379"></constructor-arg>
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
	</bean>

	<!-- jeedis客户端集群版 -->
	<!--<bean id="redisCluster" class="redis.clients.jedis.JedisCluster">-->
		<!--<constructor-arg name="nodes">-->
			<!--<set>-->
				<!--<bean class="redis.clients.jedis.HostAndPort">-->
					<!--<constructor-arg name="host" value="127.0.0.1"></constructor-arg>-->
					<!--<constructor-arg name="port" value="6639"></constructor-arg>-->
				<!--</bean>-->
				<!--<bean class="redis.clients.jedis.HostAndPort">-->
					<!--<constructor-arg name="host" value="127.0.0.1"></constructor-arg>-->
					<!--<constructor-arg name="port" value="6639"></constructor-arg>-->
				<!--</bean>-->
				<!--<bean class="redis.clients.jedis.HostAndPort">-->
					<!--<constructor-arg name="host" value="127.0.0.1"></constructor-arg>-->
					<!--<constructor-arg name="port" value="6639"></constructor-arg>-->
				<!--</bean>-->
			<!--</set>-->
		<!--</constructor-arg>-->
		<!--<constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>-->
	<!--</bean>-->

	<!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="30" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="10" />
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="1024" />
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000" />
		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="1500" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="true" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="false" />
	</bean>

</beans>
